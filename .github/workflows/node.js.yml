# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI
env:
   EB_PACKAGE_S3_BUCKET_NAME :  "react-env1"
   EB_ENVIROMENT_NAME        :  "react-env"
   EB_APPLICATION_NAME       :  "react"
   AWS_REGION_NAME           :  "US East (N. Virginia) us-east-1"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  archive-build-artifacts:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/download-artifact@v3
        with:
         node-version: ${{ matrix.node-version }}
         cache: 'npm'
      - run: npm install 
      - run: npm ci
      - run: npm run build
      - run: npm test
      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@v3
        with: 
         name: artifacts
         path: node_modules
      - name: Deploy to EB
        uses: aws-actions/configure-aws-credentials@v1
      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1
        with:
             aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY  }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}
      - name: Copy our Deployment package to S3 bucket
        run : aws s3 cp ${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/
      - name: Configure my AWS Credentils
        uses: aws-actions/configure-aws-credentials@v1  
        with:
             aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
             aws-region           : ${{ env.AWS_REGION_NAME }}
         
      - name: Create new ElasticBeanstalk Applicaiton Version
        run : 
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            
      - name: Deploy our new Application Version
        run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
 
      
        

  
        
        
